// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  age            Int?
  name           String?
  email          String          @unique
  username       String          @unique
  password       String
  role           Role            @default(BASIC)
  writtenPosts   Post[]          @relation("WrittenPosts")
  favoritePosts  Post[]          @relation("FavoritePosts")
  userPreference UserPreference?
  Comments       Comment[]

  @@index([email])
  @@index([username])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean @default(false)
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String  @unique
  displayName  String?
}

model Post {
  id            String     @id @default(uuid())
  title         String
  content       String
  averageRating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User[]     @relation("FavoritePosts")
  categories    Category[]
  Comments      Comment[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

model Comment {
  id       String @id @default(uuid())
  author   User   @relation(fields: [authorId], references: [id])
  authorId String
  post     Post   @relation(fields: [postId], references: [id])
  postId   String
  content  String
}

enum Role {
  BASIC
  EDITOR
  ADMIN
}
